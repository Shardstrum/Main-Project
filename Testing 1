
#include <Adafruit_NeoPixel.h>
#ifdef __AVR__
#include <avr/power.h> // Required for 16 MHz Adafruit Trinket
#endif

#define LED_PIN    9

#define LED_COUNT 10

Adafruit_NeoPixel strip(LED_COUNT, LED_PIN, NEO_GRB + NEO_KHZ800);


const int buttonPin = 10; 
bool secondPress = false;
unsigned long timerOne;
unsigned long timerTwo;
unsigned long pressTime;

void setup(){
  #if defined(__AVR_ATtiny85__) && (F_CPU == 16000000)
  clock_prescale_set(clock_div_1);
#endif

    pinMode(buttonPin, INPUT_PULLUP);
      strip.begin();           // INITIALIZE NeoPixel strip+++++++ object (REQUIRED)
  strip.show();            // Turn OFF all pixels ASAP
  strip.setBrightness(50); // Set BRIGHTNESS to about 1/5 (max = 255)


}

void loop(){

if(buttonPin == LOW && secondPress == false) //first button press!
   timerOne = millis();
   secondPress = true;
   

if(buttonPin == LOW && secondPress == true) { //second press!
    timerTwo = millis();
    pressTime = timerTwo - timerOne;    //presstime now holds the total time between presses in milliseconds.
    
    //don't forget to reset!
    timerOne = 0;
    timerTwo = 0;
    secondPress = false;
    

    if(pressTime <= 100);{
functionGo;  // single press
    }
  if (pressTime > 300);{
    functionGo2;  // double press
  }
  }
}



void functionGo() {
  colorWipe(strip.Color(255,   0,   0), 50); // Red
  colorWipe(strip.Color(  0, 255,   0), 50); // Green
  colorWipe(strip.Color(  0,   0, 255), 50); // Blue
}

void functionGo2(){
  colorWipe(strip.Color(  0,   0, 255), 50); // Blue
  colorWipe(strip.Color(  0, 255,   0), 50); // Green
  colorWipe(strip.Color(255,   0,   0), 50); // Red 
}

void colorWipe(uint32_t color, int wait) {
      for (int i = 0; i < strip.numPixels(); i++) { // For each pixel in strip...
        strip.setPixelColor(i, color);         //  Set pixel's color (in RAM)
        strip.show();                          //  Update strip to match
      }
    }
